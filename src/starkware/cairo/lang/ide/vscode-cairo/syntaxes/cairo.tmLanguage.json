{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Cairo",
    "patterns": [
        {
            "include": "#directives"
        },
        {
            "include": "#import"
        },
        {
            "include": "#statements"
        },
        {
            "include": "#type-annotation"
        },
        {
            "include": "#operators"
        }
    ],
    "repository": {
        "statements": {
            "patterns": [
                {
                    "include": "#literal"
                },
                {
                    "include": "#embedded-python"
                },
                {
                    "include": "#declaration"
                },
                {
                    "include": "#control-statement"
                },
                {
                    "include": "#comment"
                },
                {
                    "include": "#operators"
                },
                {
                    "match": "\\b(assert|alloc_locals)\\b",
                    "name": "keyword.other.cairo"
                },
                {
                    "match": "\\b(return|ret)\\b",
                    "name": "keyword.control.flow.cairo"
                },
                {
                    "include": "#types"
                },
                {
                    "include": "#generic-var"
                }
            ]
        },
        "parameter": {
            "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*(?:(:)\\s*([a-zA-Z_][a-zA-Z0-9_*]*))?\\s*(,)?",
            "captures": {
                "1": {
                    "name": "variable.parameter.cairo"
                },
                "2": {
                    "name": "keyword.operator.type.annotation.cairo"
                },
                "3": {
                    "patterns": [
                        {
                            "include": "#types"
                        },
                        {
                            "include": "#generic-type"
                        }
                    ]
                },
                "4": {
                    "name": "punctuation.separator.comma.cairo"
                }
            }
        },
        "operators": {
            "patterns": [
                {
                    "match": "->",
                    "name": "keyword.operator.arrow.cairo"
                },
                {
                    "name": "keyword.operator.arithmetic.cairo",
                    "match": "%|\\*|/|-|\\+"
                },
                {
                    "name": "keyword.operator.comparison.cairo",
                    "match": "=="
                },
                {
                    "name": "keyword.operator.assignment.cairo",
                    "match": "="
                }
            ]
        },
        "function-call": {
            "name": "meta.function-call.cairo",
            "begin": "(?<!func\\s*)\\b(?=(?:[\\w][\\w]*)\\(\\s*)",
            "patterns": [
                {
                    "match": "\\b([\\w][\\w]*)\\(",
                    "name": "entity.name.function.cairo"
                },
                {
                    "include": "#literal"
                },
                {
                    "include": "#operators"
                },
                {
                    "include": "#generic-var"
                }
            ],
            "end": "\\)"
        },
        "namespace-declaration": {
            "begin": "\\b(?=namespace\\b)",
            "patterns": [
                {
                    "begin": "\\b(namespace)\\b",
                    "beginCaptures": {
                        "1": {
                            "name": "storage.type.namespace.cairo"
                        }
                    },
                    "patterns": [
                        {
                            "match": "(?<=namespace\\s+)([\\w][\\w]*)\\b",
                            "name": "entity.name.namespace.cairo"
                        }
                    ],
                    "end": "(?<=:)"
                },
                {
                    "include": "#statements"
                }
            ],
            "end": "(?<=\\bend)\\b"
        },
        "function-declaration": {
            "name": "meta.function.cairo",
            "begin": "\\b(?=func\\b)",
            "patterns": [
                {
                    "match": "\\b(func)\\b",
                    "name": "storage.type.function.cairo"
                },
                {
                    "name": "meta.function.signature.cairo",
                    "begin": "\\b([\\w][\\w]*)\\b(?=[{(])",
                    "beginCaptures": {
                        "1": {
                            "name": "entity.name.function.cairo"
                        }
                    },
                    "patterns": [
                        {
                            "name": "meta.parameter.implicit.cairo",
                            "begin": "{",
                            "patterns": [
                                {
                                    "include": "#parameter"
                                },
                                {
                                    "include": "#comment"
                                }
                            ],
                            "end": "}"
                        },
                        {
                            "name": "meta.parameter.cairo",
                            "begin": "\\(",
                            "patterns": [
                                {
                                    "include": "#parameter"
                                },
                                {
                                    "include": "#comment"
                                }
                            ],
                            "end": "\\)"
                        },
                        {
                            "match": "->",
                            "name": "keyword.operator.arrow.cairo"
                        }
                    ],
                    "end": "(?<=:)",
                    "endCaptures": {}
                },
                {
                    "begin": "(?<=:)",
                    "patterns": [
                        {
                            "include": "#statements"
                        }
                    ],
                    "end": "\\b(?=end)\\b"
                }
            ],
            "end": "\\b(end)\\b",
            "endCaptures": {
                "1": {
                    "name": "storage.type.function.end.cairo"
                }
            }
        },
        "struct-declaration": {
            "name": "meta.struct.cairo",
            "begin": "\\b(?=struct\\b)",
            "patterns": [
                {
                    "match": "\\b(struct|end)\\b",
                    "name": "storage.type.struct.cairo"
                },
                {
                    "match": "(?<=struct\\s*)([\\w_][\\w\\d_]*)\\b",
                    "captures": {
                        "1": {
                            "name": "entity.name.struct.cairo"
                        }
                    }
                },
                {
                    "match": "\\b(member)\\b",
                    "name": "keyword.other.cairo"
                },
                {
                    "include": "#type-annotation"
                },
                {
                    "include": "#comment"
                }
            ],
            "end": "(?<=end)\\b"
        },
        "directives": {
            "patterns": [
                {
                    "include": "#program-directive"
                },
                {
                    "include": "#function-directive"
                }
            ]
        },
        "function-directive": {
            "name": "meta.function.decorator.cairo",
            "begin": "(?<!\\w)(@)",
            "beginCaptures": {
                "1": {
                    "name": "punctuation.decorator.cairo"
                }
            },
            "patterns": [
                {
                    "match": "(?<=@)([\\w][\\w]*)\\b",
                    "captures": {
                        "1": {
                            "name": "entity.name.decorator.cairo"
                        }
                    }
                }
            ],
            "end": "(?=\\n|\\r)"
        },
        "program-directive": {
            "name": "meta.directive.cairo",
            "begin": "(?<!\\w)(%)([\\w][\\w]*)\\b",
            "beginCaptures": {
                "1": {
                    "name": "punctuation.directive.cairo"
                },
                "2": {
                    "name": "entity.name.directive.cairo"
                }
            },
            "patterns": [
                {
                    "begin": "(?<=builtins)\\b",
                    "patterns": [
                        {
                            "match": "\\b([\\w_][\\w\\d_]*)\\b",
                            "name": "entity.name.builtins.cairo"
                        }
                    ],
                    "end": "(?=\\n|\\r)"
                },
                {
                    "begin": "(?<=lang)\\b",
                    "patterns": [
                        {
                            "match": "\\b([\\w_][\\w\\d_]*)\\b",
                            "name": "entity.name.lang.cairo"
                        }
                    ],
                    "end": "(?=\\n|\\r)"
                }
            ],
            "end": "(?:\\n|\\r)"
        },
        "declaration": {
            "patterns": [
                {
                    "include": "#namespace-declaration"
                },
                {
                    "include": "#struct-declaration"
                },
                {
                    "include": "#function-call"
                },
                {
                    "include": "#scope-attribute-declaration"
                },
                {
                    "include": "#function-declaration"
                },
                {
                    "name": "meta.var.expr.cairo",
                    "begin": "\\b(?=(?:let|const|tempvar|local)\\b)",
                    "patterns": [
                        {
                            "name": "storage.type.cairo",
                            "match": "\\b(let|const|tempvar|local)\\b"
                        },
                        {
                            "include": "#type-annotation"
                        },
                        {
                            "include": "#statements"
                        }
                    ],
                    "end": "(?<!(?:let|const|tempvar|local)\\s*)[\\n\\r]"
                },
                {
                    "match": "\\b(end)\\b",
                    "captures": {
                        "1": {
                            "name": "keyword.control.end.cairo"
                        }
                    }
                }
            ]
        },
        "control-statement": {
            "patterns": [
                {
                    "include": "#if-statement"
                },
                {
                    "name": "keyword.control.conditional.cairo",
                    "match": "\\b(if|else)\\b"
                }
            ]
        },
        "for-loop": {
            "begin": "\\b(for)\\b"
        },
        "if-statement": {
            "name": "meta.control.if.cairo",
            "begin": "\\b(if)\\b",
            "beginCaptures": {
                "1": {
                    "name": "keyword.control.conditional.cairo"
                },
                "2": {
                    "name": "entity.name.condition.cairo"
                }
            },
            "patterns": [
                {
                    "include": "#statements"
                }
            ],
            "contentName": "source.cairo",
            "end": "\\b(end)\\b",
            "endCaptures": {
                "0": {
                    "name": "keyword.control.end.cairo"
                }
            }
        },
        "comment": {
            "patterns": [
                {
                    "name": "comment.line.number-sign.cairo",
                    "match": "#[^\n]*\n"
                }
            ]
        },
        "literal": {
            "patterns": [
                {
                    "include": "#string"
                },
                {
                    "include": "#number"
                }
            ]
        },
        "string": {
            "patterns": [
                {
                    "include": "#qstring-single"
                },
                {
                    "include": "#qstring-double"
                }
            ]
        },
        "qstring-double": {
            "name": "string.quoted.double.cairo",
            "begin": "\"",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.definition.string.begin.cairo"
                }
            },
            "end": "(\")|((?:[^\\\\\\n])$)",
            "endCaptures": {
                "1": {
                    "name": "punctuation.definition.string.end.cairo"
                },
                "2": {
                    "name": "invalid.illegal.newline.cairo"
                }
            },
            "patterns": [
                {
                    "include": "#string-character-escape"
                }
            ]
        },
        "qstring-single": {
            "name": "string.quoted.single.cairo",
            "begin": "'",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.definition.string.begin.cairo"
                }
            },
            "end": "(\\')|((?:[^\\\\\\n])$)",
            "endCaptures": {
                "1": {
                    "name": "punctuation.definition.string.end.cairo"
                },
                "2": {
                    "name": "invalid.illegal.newline.cairo"
                }
            },
            "patterns": [
                {
                    "include": "#string-character-escape"
                }
            ]
        },
        "string-character-escape": {
            "name": "constant.character.escape.cairo",
            "match": "\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|u\\{[0-9A-Fa-f]+\\}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)"
        },
        "number": {
            "patterns": [
                {
                    "name": "constant.numeric.decimal.cairo",
                    "match": "\\b([0-9]+)\\b"
                },
                {
                    "name": "constant.numeric.hexadecimal.cairo",
                    "match": "\\b(0x[a-fA-F0-9]+)\\b"
                }
            ]
        },
        "import": {
            "name": "meta.import.cairo",
            "begin": "^(?=from\\s)",
            "patterns": [
                {
                    "begin": "\\b(from)\\b",
                    "beginCaptures": {
                        "1": {
                            "name": "keyword.control.from.cairo"
                        }
                    },
                    "end": "(?=(?:[\\n\\r])|(?:\\bimport\\b))"
                },
                {
                    "begin": "\\b(import)\\b",
                    "beginCaptures": {
                        "1": {
                            "name": "keyword.control.import.cairo"
                        }
                    },
                    "end": "(?=[\\n\\r])"
                }
            ],
            "end": "[\\n\\r]"
        },
        "type-annotation": {
            "name": "meta.type.annotation.cairo",
            "begin": "\\b(?=[\\w_][\\w\\d_]*\\s*:)",
            "patterns": [
                {
                    "match": "\\b([\\w_][\\w\\d_]*)\\s*(:)",
                    "captures": {
                        "1": {
                            "name": "variable.other.cairo"
                        },
                        "2": {
                            "name": "keyword.operator.type.annotation.cairo"
                        }
                    }
                },
                {
                    "begin": "\\(",
                    "patterns": [
                        {
                            "include": "#types"
                        },
                        {
                            "include": "#generic-type"
                        }
                    ],
                    "end": "\\)"
                },
                {
                    "include": "#types"
                },
                {
                    "include": "#generic-type"
                }
            ],
            "end": "(?<!:\\s*)(?=\\n|\\r|=|\\W)"
        },
        "types": {
            "patterns": [
                {
                    "name": "support.type.primitive.cairo",
                    "match": "\\b(felt)\\b"
                }
            ]
        },
        "generic-type": {
            "name": "support.type.cairo",
            "match": "\\b([\\w_][\\w\\d_]*)\\b"
        },
        "generic-var": {
            "name": "variable.other.cairo",
            "match": "\\b([\\w_][\\w\\d_]*)\\b"
        },
        "embedded-python": {
            "patterns": [
                {
                    "name": "meta.embedded.block.python",
                    "begin": "%{",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.section.embedded.begin.python"
                        }
                    },
                    "end": "%}",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.section.embedded.end.python"
                        },
                        "1": {
                            "name": "source.python"
                        }
                    },
                    "contentName": "source.python",
                    "patterns": [
                        {
                            "include": "source.python"
                        }
                    ]
                },
                {
                    "begin": "%\\[",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.section.embedded.begin.python"
                        }
                    },
                    "end": "%\\]",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.section.embedded.end.python"
                        },
                        "1": {
                            "name": "source.python"
                        }
                    },
                    "name": "meta.embedded.block.python",
                    "contentName": "source.python",
                    "patterns": [
                        {
                            "include": "source.python"
                        }
                    ]
                }
            ]
        },
        "unnamed": {
            "match": "\\b(SIZEOF_LOCALS|SIZE)\\b",
            "name": "support.constant.cairo"
        },
        "scope-attribute-declaration": {
            "name": "meta.scope-attribute.cairo",
            "begin": "\\b(?=with_attr\\b)",
            "patterns": [
                {
                    "begin": "\\b(with_attr)\\b",
                    "beginCaptures": {
                        "1": {
                            "name": "keyword.other.attribute.cairo"
                        }
                    },
                    "patterns": [
                        {
                            "begin": "\\b([\\w_][\\w\\d_]*)\\(",
                            "beginCaptures": {
                                "1": {
                                    "name": "entity.other.attribute-name.cairo"
                                }
                            },
                            "patterns": [
                                {
                                    "include": "#statements"
                                }
                            ],
                            "end": "\\)"
                        }
                    ],
                    "end": ":"
                },
                {
                    "include": "#statements"
                }
            ],
            "end": "(?<=\\bend)\\b"
        }
    },
    "scopeName": "source.cairo"
}